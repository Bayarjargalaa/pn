
import os
from pathlib import Path
import pandas as pd
import streamlit as st


# üìå –û–¥–æ–æ–≥–∏–π–Ω Python —Å–∫—Ä–∏–ø—Ç –±–∞–π—Ä–ª–∞–∂ –±—É–π —Ö–∞–≤—Ç–∞—Å
BASE_DIR = Path(__file__).resolve().parent

# üìå data —Ö–∞–≤—Ç–∞—Å –¥–∞—Ö—å —Ñ–∞–π–ª—ã–Ω –∑–∞–º
file_path_c1 = BASE_DIR.parent / "data" / "PN —Ç–æ–æ—Ü–æ–æ.xlsx"

# ‚úÖ Excel —Ñ–∞–π–ª —É–Ω—à–∏—Ö
df_c1 = pd.read_excel(file_path_c1, sheet_name='–ë–∞—Ä–∞–∞–Ω—ã –°1 2023.03.17',)

# üìä –•“Ø—Å–Ω—ç–≥—Ç—ç—ç—Ä —Ö–∞—Ä—É—É–ª–∞—Ö
st.subheader("–ë–∞—Ä–∞–∞–Ω—ã —ç—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª 2023.03.17-–Ω—ã –±–∞–π–¥–ª–∞–∞—Ä")
st.dataframe(df_c1, use_container_width=True)




# Excel —É–Ω—à–∏—Ö
file_path = BASE_DIR.parent / "data" / "–±–∞—Ä–∞–∞_—Ç–æ–æ_—à–∏—Ä—Ö—ç–≥—ç—ç—Ä.xlsx"
df_transaction=pd.read_excel(file_path, sheet_name='Sheet', skiprows=4, nrows=39000)

# '–¢–∞—Ç–∞–Ω –∞–≤–∞–ª—Ç'-—Ç–∞–π –º”©—Ä“Ø“Ø–¥–∏–π–≥ —à“Ø“Ø—Ö
tatan_avalt = df_transaction[df_transaction['–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª'] == '–¢–∞—Ç–∞–Ω –∞–≤–∞–ª—Ç']
tatan_avalt_grouped = tatan_avalt.groupby('–ë–∞–π—Ä—à–∏–ª')[['–û—Ä–ª–æ–≥–æ —Ç–æ–æ', '–û—Ä–ª–æ–≥–æ –¥“Ø–Ω']].sum().reset_index()    


st.subheader("–ë–∞—Ä–∞–∞–Ω—ã —Ç–∞—Ç–∞–Ω –∞–≤–∞–ª—Ç—ã–Ω –Ω–∏–π—Ç —Ç–æ–æ —à–∏—Ä—Ö—ç–≥, ”©—Ä—Ç”©–≥ –¥“Ø–Ω")
st.dataframe(tatan_avalt_grouped.style.format({"–û—Ä–ª–æ–≥–æ —Ç–æ–æ": "{:,.2f}", "–û—Ä–ª–æ–≥–æ –¥“Ø–Ω":"{:,.2f}"}), use_container_width=True)




# –û—Ä–ª–æ–≥—ã–Ω —Ç–æ–æ > 0 –±—É—é—É –∞–≥—É—É–ª–∞—Ö–∞–¥ –æ—Ä—Å–æ–Ω –≥“Ø–π–ª–≥—ç—ç–Ω“Ø“Ø–¥–∏–π–≥ –∞–≤–Ω–∞
outgoing_df = df_transaction[df_transaction["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] > 0].copy()

# –ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª –±–∞ –∞–≥—É—É–ª–∞—Ö (–±–∞–π—Ä—à–∏–ª) –±–∞–≥–∞–Ω—É—É–¥–∞–∞—Ä –±“Ø–ª—ç–≥–ª—ç–∂, –¥“Ø–Ω–≥ –Ω—ç–≥—Ç–≥—ç—Ö
agg_summary = outgoing_df.groupby(["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"])["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"].sum().reset_index()

# –•–∞—Ä—É—É–ª–∞—Ö
st.subheader("üè∑Ô∏è –ê–≥—É—É–ª–∞—Ö —Ç—É—Å –±“Ø—Ä—Ç –æ—Ä—Å–æ–Ω –±–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä–ª“Ø“Ø–¥")
st.dataframe(agg_summary.style.format({"–û—Ä–ª–æ–≥–æ —Ç–æ–æ": "{:,.2f}"}), use_container_width=True)






# –ó–∞—Ä–ª–∞–≥—ã–Ω —Ç–æ–æ > 0 –±—É—é—É –∞–≥—É—É–ª–∞—Ö–∞–∞—Å –≥–∞—Ä—Å–∞–Ω –≥“Ø–π–ª–≥—ç—ç–Ω“Ø“Ø–¥–∏–π–≥ –∞–≤–Ω–∞
outgoing_df = df_transaction[df_transaction["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"] > 0].copy()

# –ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª –±–∞ –∞–≥—É—É–ª–∞—Ö (–±–∞–π—Ä—à–∏–ª) –±–∞–≥–∞–Ω—É—É–¥–∞–∞—Ä –±“Ø–ª—ç–≥–ª—ç–∂, –¥“Ø–Ω–≥ –Ω—ç–≥—Ç–≥—ç—Ö
agg_summary = outgoing_df.groupby(["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"])["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"].sum().reset_index()

# –•–∞—Ä—É—É–ª–∞—Ö
st.subheader("üè∑Ô∏è –ê–≥—É—É–ª–∞—Ö —Ç—É—Å –±“Ø—Ä—ç—ç—Å –≥–∞—Ä—Å–∞–Ω –±–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä–ª“Ø“Ø–¥")
st.dataframe(agg_summary.style.format({"–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ": "{:2,.2f}"}), use_container_width=True)




# 1. "–ë–∞—Ä–∞–∞ –º–∞—Ç–µ—Ä–∏–∞–ª —Ö”©–¥”©–ª–≥”©”©–Ω" –±–∞—Ä–∏–º—Ç—É—É–¥—ã–≥ —à“Ø“Ø—Ö
bm_movement_df = df_transaction[df_transaction["–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"] == "–ë–∞—Ä–∞–∞ –º–∞—Ç–µ—Ä–∏–∞–ª —Ö”©–¥”©–ª–≥”©”©–Ω"].copy()

# 2. –ë–∞—Ä–∏–º—Ç –±“Ø—Ä —Ö—ç–¥—ç–Ω –º”©—Ä—Ç—ç–π–≥ —Ç–æ–æ–ª–Ω–æ
barimt_counts = bm_movement_df.groupby("–ë–∞—Ä–∏–º—Ç").size()

# 3. 2-—Å –¥—ç—ç—à –º”©—Ä—Ç—ç–π –±–∞—Ä–∏–º—Ç—É—É–¥—ã–Ω –¥—É–≥–∞–∞—Ä—ã–≥ –∞–≤–Ω–∞
multi_line_nos = barimt_counts[barimt_counts > 1].index

# 4. –≠–¥–≥—ç—ç—Ä –±–∞—Ä–∏–º—Ç—É—É–¥—ã–≥ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º—ç—ç—Å —à“Ø“Ø–Ω—ç
multi_row_df = bm_movement_df[bm_movement_df["–ë–∞—Ä–∏–º—Ç"].isin(multi_line_nos)].copy()

# 5. –ë–∞—Ä–∏–º—Ç–∞–∞—Ä –Ω—ç–≥—Ç–≥—ç–∂ –Ω–∏–π—Ç –æ—Ä–ª–æ–≥–æ, –∑–∞—Ä–ª–∞–≥–∞ –≥–∞—Ä–≥–∞–Ω–∞
summary = multi_row_df.groupby("–ë–∞—Ä–∏–º—Ç")[["–û—Ä–ª–æ–≥–æ —Ç–æ–æ", "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"]].sum().reset_index()

# 6. –ì–∞—Ä–∞–ª—Ç—ã–Ω –±–æ–ª–æ–Ω –æ—Ä–æ–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö—ã–≥ —è–ª–≥–∞–∂ –∞–≤–Ω–∞
zar = multi_row_df[multi_row_df["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"] > 0].groupby("–ë–∞—Ä–∏–º—Ç").agg({
    "–ë–∞–π—Ä—à–∏–ª": "first",
    "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ": "sum"
}).reset_index().rename(columns={"–ë–∞–π—Ä—à–∏–ª": "–ì–∞—Ä–∞–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö"})

orl = multi_row_df[multi_row_df["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] > 0].groupby("–ë–∞—Ä–∏–º—Ç").agg({
    "–ë–∞–π—Ä—à–∏–ª": "first"
}).reset_index().rename(columns={"–ë–∞–π—Ä—à–∏–ª": "–û—Ä–æ–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö"})

# 7. –ù—ç–≥—Ç–≥—ç–∂ —Ö–æ–ª–±–æ—Ö
merged = pd.merge(zar, orl, on="–ë–∞—Ä–∏–º—Ç", how="inner")

# 8. –ì–∞—Ä–∞–ª—Ç—ã–Ω –±–æ–ª–æ–Ω –æ—Ä–æ–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö + –Ω–∏–π—Ç —à–∏–ª–∂“Ø“Ø–ª—Å—ç–Ω —Ç–æ–æ-–≥ –±“Ø–ª—ç–≥–ª—ç–Ω—ç
summary_by_location = merged.groupby(["–ì–∞—Ä–∞–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö", "–û—Ä–æ–ª—Ç—ã–Ω –∞–≥—É—É–ª–∞—Ö"])["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"].sum().reset_index(name="–ù–∏–π—Ç —à–∏–ª–∂“Ø“Ø–ª—Å—ç–Ω —Ç–æ–æ")

# 9. –•–∞—Ä—É—É–ª–∞—Ö
st.subheader("üè∑Ô∏è –ê–≥—É—É–ª–∞—Ö —Ö–æ–æ—Ä–æ–Ω–¥—ã–Ω —Ö”©–¥”©–ª–≥”©”©–Ω–∏–π —à–∏–ª–∂“Ø“Ø–ª—ç–≥")
st.dataframe(summary_by_location.style.format({"–ù–∏–π—Ç —à–∏–ª–∂“Ø“Ø–ª—Å—ç–Ω —Ç–æ–æ": "{:,.2f}"}), use_container_width=True)







# –û—Ä–ª–æ–≥–æ –±–∞ –∑–∞—Ä–ª–∞–≥—ã–Ω –∞–≥—É—É–ª–∞—Ö—ã–≥ —è–ª–≥–∞–Ω–∞
zar = df_transaction[df_transaction["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"] > 0][["–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª", "–ë–∞–π—Ä—à–∏–ª", "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"]].rename(
    columns={"–ë–∞–π—Ä—à–∏–ª": "–ê–≥—É—É–ª–∞—Ö", "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ": "–¢–æ–æ"})
zar["–¢”©—Ä”©–ª"] = "–ó–∞—Ä–ª–∞–≥–∞"

orl = df_transaction[df_transaction["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] > 0][["–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª", "–ë–∞–π—Ä—à–∏–ª", "–û—Ä–ª–æ–≥–æ —Ç–æ–æ"]].rename(
    columns={"–ë–∞–π—Ä—à–∏–ª": "–ê–≥—É—É–ª–∞—Ö", "–û—Ä–ª–æ–≥–æ —Ç–æ–æ": "–¢–æ–æ"})
orl["–¢”©—Ä”©–ª"] = "–û—Ä–ª–æ–≥–æ"

# –ù—ç–≥–¥“Ø“Ø–ª–∂ –Ω—ç–≥ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º –±–æ–ª–≥–æ—Ö
movement_combined = pd.concat([zar, orl], ignore_index=True)
pivot_df = movement_combined.pivot_table(
    index=["–ê–≥—É—É–ª–∞—Ö"],         # –ê–≥—É—É–ª–∞—Ö –±“Ø—Ä–∏–π–Ω —Ö—É–≤—å–¥
    columns=["–¢”©—Ä”©–ª", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"],  # –û—Ä–ª–æ–≥–æ/–ó–∞—Ä–ª–∞–≥–∞ + –ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª
    values="–¢–æ–æ",
    aggfunc="sum",
    fill_value=0
)

# –î–∏–∑–∞–π–Ω —Å–∞–π–∂—Ä—É—É–ª–∞–ª—Ç
pivot_df.columns = [' | '.join(col).strip() for col in pivot_df.columns.values]
pivot_df = pivot_df.reset_index()
st.subheader("üìä –ê–≥—É—É–ª–∞—Ö —Ö–æ–æ—Ä–æ–Ω–¥—ã–Ω –û—Ä–ª–æ–≥–æ/–ó–∞—Ä–ª–∞–≥–∞, –ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä–ª”©”©—Ä")
st.dataframe(pivot_df, use_container_width=True)






# –û—Ä–ª–æ–≥–æ –±–∞ –∑–∞—Ä–ª–∞–≥—ã–Ω –∞–≥—É—É–ª–∞—Ö, –±–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä—ç—ç—Ä —Ö–∞–º—Ç –∞–≤–∞—Ö
orl = df_transaction[df_transaction["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] > 0][["–ë–∞–π—Ä—à–∏–ª", "–û—Ä–ª–æ–≥–æ —Ç–æ–æ", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"]].rename(
    columns={"–ë–∞–π—Ä—à–∏–ª": "–ê–≥—É—É–ª–∞—Ö", "–û—Ä–ª–æ–≥–æ —Ç–æ–æ": "–¢–æ–æ"})
orl["–¢”©—Ä”©–ª"] = "–û—Ä–ª–æ–≥–æ"

zar = df_transaction[df_transaction["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"] > 0][["–ë–∞–π—Ä—à–∏–ª", "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"]].rename(
    columns={"–ë–∞–π—Ä—à–∏–ª": "–ê–≥—É—É–ª–∞—Ö", "–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ": "–¢–æ–æ"})
zar["–¢”©—Ä”©–ª"] = "–ó–∞—Ä–ª–∞–≥–∞"



# –ù—ç–≥—Ç–≥—ç—Ö
movement_combined = pd.concat([orl, zar,], ignore_index=True)

# Pivot —Ö–∏–π—Ö
pivot_df = movement_combined.pivot_table(
    index=["–ê–≥—É—É–ª–∞—Ö", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"],  # –ê–≥—É—É–ª–∞—Ö + –ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä—ç—ç—Ä
    columns=["–¢”©—Ä”©–ª", "–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"],  # –û—Ä–ª–æ–≥–æ/–ó–∞—Ä–ª–∞–≥–∞ + –±–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª
    values="–¢–æ–æ",
    aggfunc="sum",
    fill_value=0
)

# –ë–∞–≥–∞–Ω—ã–Ω –Ω—ç—Ä —Ñ–æ—Ä–º–∞—Ç –∑–∞—Å–∞—Ö
pivot_df.columns = [' | '.join(col).strip() for col in pivot_df.columns.values]
pivot_df = pivot_df.reset_index()

# –•–∞—Ä—É—É–ª–∞—Ö
st.subheader("üì¶ –ê–≥—É—É–ª–∞—Ö + –ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä—ç—ç—Ä, –æ—Ä–ª–æ–≥–æ/–∑–∞—Ä–ª–∞–≥–∞ –±–∞ –±–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä–ª”©”©—Ä")
st.dataframe(pivot_df, use_container_width=True)
# 1. –¢–æ–æ–Ω –±–∞–≥–∞–Ω–∞ (–±“Ø–≥–¥–∏–π–≥ –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä –æ–ª–æ—Ö)
numeric_cols = pivot_df.select_dtypes(include='number').columns

# 2. –ù–∏–π—Ç –¥“Ø–Ω–≥ —Ç–æ–æ—Ü–æ–æ–ª–æ—Ö (—Ç–æ–æ–Ω –±–∞–≥–∞–Ω—É—É–¥–∞–∞—Ä)
totals = pivot_df[numeric_cols].sum()

# 3. –•”©–ª –¥“Ø–Ω–≥ –Ω—ç–≥ –º”©—Ä –±–æ–ª–≥–æ–Ω “Ø“Ø—Å–≥—ç—Ö
total_row = pd.DataFrame([["–ù–∏–π—Ç", ""] + totals.tolist()], columns=["–ê–≥—É—É–ª–∞—Ö", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"] + numeric_cols.tolist())

# 4. –•”©–ª –¥“Ø–Ω–≥ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–¥ –Ω—ç–º–∂ –Ω—ç–≥—Ç–≥—ç—Ö
pivot_with_total = pd.concat([pivot_df, total_row], ignore_index=True)

# 5. –•“Ø—Å–Ω—ç–≥—Ç–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
st.subheader("üì¶ –ê–≥—É—É–ª–∞—Ö + –ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä + –•”©–ª –¥“Ø–Ω")
st.dataframe(pivot_with_total, use_container_width=True)













# '–¢–∞—Ç–∞–Ω –∞–≤–∞–ª—Ç'-—Ç–∞–π –º”©—Ä“Ø“Ø–¥–∏–π–≥ —à“Ø“Ø—Ö
tatan_avalt = df_transaction[df_transaction['–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª'] == '–ë–∞—Ä–∞–∞ –º–∞—Ç–µ—Ä–∏–∞–ª —Ö”©–¥”©–ª–≥”©”©–Ω']
tatan_avalt_grouped = tatan_avalt.groupby('–ë–∞–π—Ä—à–∏–ª')[['–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ', '–ó–∞—Ä–ª–∞–≥–∞ –¥“Ø–Ω']].sum().reset_index()    


st.subheader("–ë–∞—Ä–∞–∞–Ω—ã —Ö”©–¥”©–ª–≥”©”©–Ω–∏–π –∑–∞—Ä–ª–∞–≥—ã–Ω –Ω–∏–π—Ç —Ç–æ–æ —à–∏—Ä—Ö—ç–≥, –¥“Ø–Ω")
st.dataframe(tatan_avalt_grouped.style.format({"–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ": "{:,.2f}", "–ó–∞—Ä–ª–∞–≥–∞ –¥“Ø–Ω":"{:,.2f}"}), use_container_width=True)




# ...existing code...

# --- –ë–∞–π—Ä—à–∏–ª —Ç—É—Å –±“Ø—Ä–∏–π–Ω –±–∞—Ä–∞–∞–Ω—ã —ç—Ü—Å–∏–π–Ω “Ø–ª–¥—ç–≥–¥—ç–ª (—Ç–æ–æ–ª–ª–æ–≥—ã–Ω –æ—Ä–ª–æ–≥–æ, –∑–∞—Ä–ª–∞–≥–∞ –æ—Ä—É—É–ª–∞—Ö–≥“Ø–π) ---

# 1. –≠—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª (–∞–≥—É—É–ª–∞—Ö—ã–Ω) - –ë–∞–π—Ä—à–∏–ª —Ç—É—Å –±“Ø—Ä—ç—ç—Ä (–∑”©–≤—Ö”©–Ω "–ê–≥—É—É–ª–∞—Ö", "PN Store")
df_ankh = df_c1.rename(columns={"–ù—ç—Ä": "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"})[["–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä", "–ê–≥—É—É–ª–∞—Ö", "PN Store"]].copy()
ankh_warehouse = df_ankh[["–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä", "–ê–≥—É—É–ª–∞—Ö"]].copy().rename(columns={"–ê–≥—É—É–ª–∞—Ö": "–≠—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª"})
ankh_warehouse["–ë–∞–π—Ä—à–∏–ª"] = "–ê–≥—É—É–ª–∞—Ö"
ankh_store = df_ankh[["–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä", "PN Store"]].copy().rename(columns={"PN Store": "–≠—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª"})
ankh_store["–ë–∞–π—Ä—à–∏–ª"] = "PN Store"
df_ankh_all = pd.concat([ankh_warehouse, ankh_store], ignore_index=True)

# 2. –ì“Ø–π–ª–≥—ç—ç–Ω–∏–π –±“Ø—Ö –±–∞–π—Ä—à–∏–ª, –±–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä–∏–π–Ω —Ö–æ—Å–ª–æ–ª—ã–≥ –æ–ª–Ω–æ
all_locations = df_transaction[["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"]].drop_duplicates()
# –≠—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª—Ç—ç–π –±–∞–π—Ä—à–ª—É—É–¥—ã–≥ –Ω—ç–º–Ω—ç
all_locations = pd.concat([
    all_locations,
    df_ankh_all[["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"]]
]).drop_duplicates().reset_index(drop=True)

# 3. –û—Ä–ª–æ–≥–æ, –∑–∞—Ä–ª–∞–≥—ã–≥ —Ç–æ–æ—Ü–æ–æ–ª–Ω–æ (—Ç–æ–æ–ª–ª–æ–≥—ã–Ω –æ—Ä–ª–æ–≥–æ/–∑–∞—Ä–ª–∞–≥–∞ –æ—Ä—É—É–ª–∞—Ö–≥“Ø–π)
orl = df_transaction[
    (df_transaction["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] > 0) &
    (df_transaction["–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"] != "–¢–æ–æ–ª–ª–æ–≥—ã–Ω –æ—Ä–ª–æ–≥–æ")
].groupby(["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"])["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"].sum().reset_index()

zar = df_transaction[
    (df_transaction["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"] > 0) &
    (df_transaction["–ë–∞—Ä–∏–º—Ç—ã–Ω —Ç”©—Ä”©–ª"] != "–¢–æ–æ–ª–ª–æ–≥—ã–Ω –∑–∞—Ä–ª–∞–≥–∞")
].groupby(["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"])["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"].sum().reset_index()

# 4. –ë“Ø—Ö –±–∞–π—Ä—à–∏–ª, –±–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä–∏–π–Ω —Ö–æ—Å–ª–æ–ª –¥—ç—ç—Ä —ç—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª, –æ—Ä–ª–æ–≥–æ, –∑–∞—Ä–ª–∞–≥–∞-–≥ –Ω—ç–≥—Ç–≥—ç–Ω—ç
df_balance = all_locations.merge(df_ankh_all, on=["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"], how="left")
df_balance = df_balance.merge(orl, on=["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"], how="left")
df_balance = df_balance.merge(zar, on=["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä"], how="left")
df_balance = df_balance.fillna(0)

# 5. –≠—Ü—Å–∏–π–Ω “Ø–ª–¥—ç–≥–¥—ç–ª —Ç–æ–æ—Ü–æ–æ–ª–æ—Ö
df_balance["–≠—Ü—Å–∏–π–Ω “Ø–ª–¥—ç–≥–¥—ç–ª"] = (
    df_balance["–≠—Ö–Ω–∏–π “Ø–ª–¥—ç–≥–¥—ç–ª"] + df_balance["–û—Ä–ª–æ–≥–æ —Ç–æ–æ"] - df_balance["–ó–∞—Ä–ª–∞–≥–∞ —Ç–æ–æ"]
)

# 6. –•–∞—Ä—É—É–ª–∞—Ö
st.subheader("üì¶ –ë–∞–π—Ä—à–∏–ª —Ç—É—Å –±“Ø—Ä–∏–π–Ω –±–∞—Ä–∞–∞–Ω—ã —ç—Ü—Å–∏–π–Ω “Ø–ª–¥—ç–≥–¥—ç–ª (–ë“Ø—Ö –±–∞–π—Ä—à–∏–ª, —Ç–æ–æ–ª–ª–æ–≥—ã–Ω –æ—Ä–ª–æ–≥–æ/–∑–∞—Ä–ª–∞–≥–∞ –æ—Ä—É—É–ª–∞—Ö–≥“Ø–π)")
st.dataframe(df_balance[["–ë–∞–π—Ä—à–∏–ª", "–ë–∞—Ä–∞–∞–Ω—ã –Ω—ç—Ä", "–≠—Ü—Å–∏–π–Ω “Ø–ª–¥—ç–≥–¥—ç–ª"]], use_container_width=True)
# ...existing code...