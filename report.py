import streamlit as st
import pandas as pd

st.set_page_config(page_title="–°–∞—Ä –±“Ø—Ä–∏–π–Ω –∞—à–∏–≥ –∞–ª–¥–∞–≥–¥–ª—ã–Ω —Ç–∞–π–ª–∞–Ω", layout="centered")
st.title("üìä –°–∞—Ä –±“Ø—Ä–∏–π–Ω –∞—à–∏–≥ –∞–ª–¥–∞–≥–¥–ª—ã–Ω —Ç–∞–π–ª–∞–Ω")
df= pd.read_excel("–ï–ñ.xlsx")

print(df.columns)

# üßπ –ë—ç–ª—Ç–≥—ç—Ö
df['–û–≥–Ω–æ–æ'] = pd.to_datetime(df['—Å–∞—Ä, ”©–¥”©—Ä'])



# –î–∞–Ω—Å –±–æ–ª–æ–Ω –¥“Ø–Ω–≥ –Ω—ç–≥ –±–∞–≥–∞–Ω–∞ –±–æ–ª–≥–æ–Ω –Ω—ç–≥—Ç–≥—ç—Ö
all_debet_df = df[["–û–≥–Ω–æ–æ", "–î–µ–±–µ—Ç", "–î“Ø–Ω"]].rename(columns={"–î–µ–±–µ—Ç": "–î–∞–Ω—Å –∫–æ–¥"})
all_credit_df = df[["–û–≥–Ω–æ–æ", "–ö—Ä–µ–¥–∏—Ç\n", "–î“Ø–Ω"]].rename(columns={"–ö—Ä–µ–¥–∏—Ç\n": "–î–∞–Ω—Å –∫–æ–¥"})



# –°–∞—Ä—ã–Ω —Ñ–æ—Ä–º–∞—Ç –≥–∞—Ä–≥–∞—Ö (—Ö“Ø—Å–≤—ç–ª)
all_debet_df["–°–∞—Ä"] = all_debet_df["–û–≥–Ω–æ–æ"].dt.to_period("M")
all_credit_df["–°–∞—Ä"] = all_credit_df["–û–≥–Ω–æ–æ"].dt.to_period("M")

# –ù–∏–π–ª–±—ç—Ä–∏–π–≥ –≥–∞—Ä–≥–∞—Ö
# pivot = all_df.groupby(["–î–∞–Ω—Å –∫–æ–¥"])["–î“Ø–Ω"].sum().reset_index()
pivot_debit = all_debet_df.pivot_table(
    index="–î–∞–Ω—Å –∫–æ–¥", 
    columns="–°–∞—Ä", 
    values="–î“Ø–Ω", 
    aggfunc="sum", 
    fill_value=0
)
numeric_cols = pivot_debit.select_dtypes(include=['number']).columns
pivot_debit[numeric_cols] = pivot_debit[numeric_cols].astype(float)

pivot_credit = all_credit_df.pivot_table(
    index="–î–∞–Ω—Å –∫–æ–¥", 
    columns="–°–∞—Ä", 
    values="–î“Ø–Ω", 
    aggfunc="sum", 
    fill_value=0
)
numeric_cols = pivot_credit.select_dtypes(include=['number']).columns
pivot_credit[numeric_cols] = pivot_credit[numeric_cols].astype(float)




# üìà –•“Ø—Å–Ω—ç–≥—Ç —Ö–∞—Ä—É—É–ª–∞—Ö
# st.subheader("–°–∞—Ä –±“Ø—Ä–∏–π–Ω –¥–µ–±–µ—Ç –¥“Ø–Ω")
# st.dataframe(pivot)
# st.dataframe(pivot_debit.style.format("{:,.2f}"))

# üìà –•“Ø—Å–Ω—ç–≥—Ç —Ö–∞—Ä—É—É–ª–∞—Ö
# st.subheader("–°–∞—Ä –±“Ø—Ä–∏–π–Ω –∫—Ä–µ–¥–∏—Ç –¥“Ø–Ω")
# st.dataframe(pivot)
# st.dataframe(pivot_credit.style.format("{:,.2f}"))

rows_5101  = pivot_credit.loc[pivot_credit.index.astype(str).str.startswith('5101')]
rows_6101  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('6101')]
# rows_1501  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('1501')]
rows_70  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('70')]
rows_71  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('71')]
rows_87  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('87')]
rows_88  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('88')]
rows_91  = pivot_debit.loc[pivot_debit.index.astype(str).str.startswith('91')]

merged_rows = pd.concat([rows_5101, rows_6101,  ], axis=0)

# –°–∞—Ä –±–∞–≥–∞–Ω—É—É–¥–∞–∞—Ä —è–ª–≥–∞–Ω, —è–ª–≥–∞—Å–Ω—ã –¥–∞—Ä–∞–∞ —Ö–æ–æ—Ä–æ–Ω–¥—ã–Ω –∑”©—Ä“Ø“Ø–≥ —Ç–æ–æ—Ü–æ—Ö
gross_profit = rows_5101.sum(numeric_only=True) - rows_6101.sum(numeric_only=True)
merged_rows.loc['–ë–æ—Ö–∏—Ä –∞—à–∏–≥'] = gross_profit

row_70_total = pd.DataFrame(rows_70.sum(numeric_only=True)).T
row_70_total.index = ['70_–ó–∞—Ä–¥–ª—ã–Ω_–Ω–∏–π—Ç']
merged_rows = pd.concat([merged_rows, row_70_total], axis=0)

row_71_total = pd.DataFrame(rows_71.sum(numeric_only=True)).T
row_71_total.index = ['71_–ó–∞—Ä–¥–ª—ã–Ω_–Ω–∏–π—Ç']
merged_rows = pd.concat([merged_rows, row_71_total], axis=0)

row_87_total = pd.DataFrame(rows_87.sum(numeric_only=True)).T
row_87_total.index = ['87_–ó–∞—Ä–¥–ª—ã–Ω_–Ω–∏–π—Ç']
merged_rows = pd.concat([merged_rows, row_87_total], axis=0)

row_88_total = pd.DataFrame(rows_88.sum(numeric_only=True)).T
row_88_total.index = ['88_–ó–∞—Ä–¥–ª—ã–Ω_–Ω–∏–π—Ç']
merged_rows = pd.concat([merged_rows, row_88_total], axis=0)

row_91_total = pd.DataFrame(rows_91.sum(numeric_only=True)).T
row_91_total.index = ['91_–ó–∞—Ä–¥–ª—ã–Ω_–Ω–∏–π—Ç']
merged_rows = pd.concat([merged_rows, row_91_total], axis=0)

rows_all_expense = pivot_debit.loc[
    pivot_debit.index.astype(str).str.startswith(('70', '71', '87', '88', '91'))
]



row_total_expense = pd.DataFrame(rows_all_expense.sum(numeric_only=True)).T
row_total_expense.index = ['–ù–∏–π—Ç –∑–∞—Ä–¥–∞–ª (70+71+87+88+91)']

net_profit = gross_profit - row_total_expense.loc['–ù–∏–π—Ç –∑–∞—Ä–¥–∞–ª (70+71+87+88+91)']
net_profit = pd.DataFrame(net_profit).T 
net_profit.index = ['–¶—ç–≤—ç—Ä –∞—à–∏–≥ /-/ –±–æ–ª –∞–ª–¥–∞–≥–¥–∞–ª']
# merged_rows.loc['–¶—ç–≤—ç—Ä –∞—à–∏–≥'] = net_profit

merged_rows = pd.concat([merged_rows, row_total_expense], axis=0)

merged_rows = pd.concat([merged_rows, net_profit], axis=0)

st.dataframe(merged_rows.style.format("{:,.2f}"), use_container_width=True)

# üìâ –ì—Ä–∞—Ñ–∏–∫
# st.line_chart(pivot['–¶—ç–≤—ç—Ä –∞—à–∏–≥'])


st.subheader("–°–∞—Ä –±“Ø—Ä–∏–π–Ω –∑–∞—Ä–¥–ª—ã–Ω —Ç–∞–π–ª–∞–Ω (70, 71, 87, 88, 91)")
st.dataframe(rows_all_expense.style.format("{:,.2f}"), use_container_width=True)



# selected_month = st.selectbox("–°–∞—Ä —Å–æ–Ω–≥–æ—Ö:", numeric_cols)
# # üìå –°–æ–Ω–≥–æ—Å–æ–Ω —Å–∞—Ä—ã–Ω –º—ç–¥—ç—ç–ª–ª–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
# st.dataframe(
#     rows_all_expense[[selected_month]].style.format("{:,.2f}"),
#     use_container_width=True
# )

df.columns = df.columns.astype(str)
selected_month = st.selectbox(
    "–°–∞—Ä —Å–æ–Ω–≥–æ—Ö:", 
    numeric_cols,
    key="sar_songolt"
)

# üëâ –°–æ–Ω–≥–æ—Å–æ–Ω —Å–∞—Ä—ã–Ω –Ω—ç–≥ –±–∞–≥–∞–Ω—ã–Ω –¥–∞—Ç–∞—Ñ—Ä–µ–π–º
selected_data = rows_all_expense[[selected_month]].copy()

# üëâ –ù–∏–π—Ç –∑–∞—Ä–¥–∞–ª (–Ω–∏–π—Ç –Ω–∏–π–ª–±—ç—Ä)
total = selected_data[selected_month].sum()

# üëâ –•—É–≤—å —Ç–æ–æ—Ü–æ—Ö –±–∞–≥–∞–Ω–∞
selected_data["–•—É–≤—å (%)"] = (selected_data[selected_month] / total * 100)

# üëâ Streamlit-–¥ —Ñ–æ—Ä–º–∞—Ç–ª–∞–∂ —Ö–∞—Ä—É—É–ª–∞—Ö
st.dataframe(
    selected_data.style.format({
        selected_month: "{:,.2f}",
        "–•—É–≤—å (%)": "{:.2f}%"
    }),
    use_container_width=True
)
import pandas as pd
import streamlit as st

# üìå 5101 –¥“Ø–Ω–≥ –ö—Ä–µ–¥–∏—Ç —Ç–∞–ª–¥ –∞–≥—É—É–ª—Å–∞–Ω –≥“Ø–π–ª–≥—ç—ç–Ω“Ø“Ø–¥–∏–π–≥ —à“Ø“Ø—Ö
sales_entries = df[df["–ö—Ä–µ–¥–∏—Ç\n"].astype(str).str.startswith("5101")].copy()

# üóìÔ∏è –û–≥–Ω–æ–æ–≥ datetime –±–æ–ª–≥–æ–∂, —Å–∞—Ä–∞–∞—Ä –±“Ø–ª—ç–≥–ª—ç—Ö—ç–¥ –∞—à–∏–≥–ª–∞—Ö –±–∞–≥–∞–Ω–∞ “Ø“Ø—Å–≥—ç—Ö
sales_entries["–û–≥–Ω–æ–æ"] = pd.to_datetime(sales_entries["–û–≥–Ω–æ–æ"], errors='coerce')
sales_entries["–°–∞—Ä"] = sales_entries["–û–≥–Ω–æ–æ"].dt.to_period("M")

# üìä –°–∞—Ä–∞–∞—Ä, –î–µ–±–µ—Ç –¥–∞–Ω—Å–∞–∞—Ä –±“Ø–ª—ç–≥–ª—ç–∂ –¥“Ø–Ω–≥ –Ω—ç–≥—Ç–≥—ç—Ö
monthly_sales = sales_entries.groupby(["–°–∞—Ä", "–î–µ–±–µ—Ç"])["–î“Ø–Ω"].sum().reset_index()

# üìå Pivot —Ö“Ø—Å–Ω—ç–≥—Ç “Ø“Ø—Å–≥—ç—Ö: –º”©—Ä - –î–µ–±–µ—Ç –¥–∞–Ω—Å, –±–∞–≥–∞–Ω–∞ - –°–∞—Ä
pivot_monthly_sales = monthly_sales.pivot(index="–î–µ–±–µ—Ç", columns="–°–∞—Ä", values="–î“Ø–Ω").fillna(0)

# ‚ûï –ù–∏–π—Ç –º”©—Ä –Ω—ç–º—ç—Ö: –°–∞—Ä —Ç—É—Å –±“Ø—Ä–∏–π–Ω –Ω–∏–π–ª–±—ç—Ä–∏–π–≥ —Ç–æ–æ—Ü–æ–æ–ª–Ω–æ
total_row = pivot_monthly_sales.sum(numeric_only=True)
total_row.name = "–ù–∏–π—Ç"

# ‚¨áÔ∏è –ù–∏–π—Ç –º”©—Ä–∏–π–≥ pivot —Ö“Ø—Å–Ω—ç–≥—Ç—ç–¥ –Ω—ç–º—ç—Ö
pivot_monthly_sales = pd.concat([pivot_monthly_sales, total_row.to_frame().T])

# üìà Streamlit –¥—ç—ç—Ä —Ö–∞—Ä—É—É–ª–∞—Ö
st.subheader("üìä –ë–æ—Ä–ª—É—É–ª–∞–ª—Ç—ã–Ω –æ—Ä–ª–æ–≥–æ (5101) —Å–∞—Ä –±“Ø—Ä —Ö–∞—Ä—å—Ü—Å–∞–Ω –¥–∞–Ω—Å—É—É–¥–∞–∞—Ä (–ù–∏–π—Ç –¥“Ø–Ω—Ç—ç–π)")
st.dataframe(pivot_monthly_sales.style.format("{:,.2f}"), use_container_width=True)



